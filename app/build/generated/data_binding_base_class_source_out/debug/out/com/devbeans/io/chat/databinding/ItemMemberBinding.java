// Generated by data binding compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.devbeans.io.chat.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemMemberBinding extends ViewDataBinding {
  @NonNull
  public final CircleImageView ivChatImage;

  @NonNull
  public final CheckBox ivCheckOff;

  @NonNull
  public final ImageView ivCrown;

  @NonNull
  public final ConstraintLayout layoutMember;

  @NonNull
  public final LinearLayout nameLayout;

  @NonNull
  public final TextView tvAdmin;

  @NonNull
  public final TextView tvChatName;

  @NonNull
  public final TextView tvChatNickName;

  protected ItemMemberBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CircleImageView ivChatImage, CheckBox ivCheckOff, ImageView ivCrown,
      ConstraintLayout layoutMember, LinearLayout nameLayout, TextView tvAdmin, TextView tvChatName,
      TextView tvChatNickName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivChatImage = ivChatImage;
    this.ivCheckOff = ivCheckOff;
    this.ivCrown = ivCrown;
    this.layoutMember = layoutMember;
    this.nameLayout = nameLayout;
    this.tvAdmin = tvAdmin;
    this.tvChatName = tvChatName;
    this.tvChatNickName = tvChatNickName;
  }

  @NonNull
  public static ItemMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_member, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemMemberBinding>inflateInternal(inflater, R.layout.item_member, root, attachToRoot, component);
  }

  @NonNull
  public static ItemMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_member, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemMemberBinding>inflateInternal(inflater, R.layout.item_member, null, false, component);
  }

  public static ItemMemberBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemMemberBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemMemberBinding)bind(component, view, R.layout.item_member);
  }
}

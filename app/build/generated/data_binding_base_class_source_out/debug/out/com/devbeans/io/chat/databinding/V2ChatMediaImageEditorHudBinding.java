// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import com.devbeans.io.chat.utils.views.BrushWidthPreviewView;
import com.devbeans.io.chat.utils.views.RotationDialView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class V2ChatMediaImageEditorHudBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final Guideline imageEditorBottomGuide;

  @NonNull
  public final ImageView imageEditorHudAspectLockButton;

  @NonNull
  public final ImageView imageEditorHudBlurButton;

  @NonNull
  public final TextView imageEditorHudBlurHelpText;

  @NonNull
  public final TextView imageEditorHudBlurToast;

  @NonNull
  public final SwitchMaterial imageEditorHudBlurToggle;

  @NonNull
  public final LinearLayout imageEditorHudBlurToggleContainer;

  @NonNull
  public final BrushWidthPreviewView imageEditorHudBrushPreview;

  @NonNull
  public final Barrier imageEditorHudButtonBarrier;

  @NonNull
  public final ImageView imageEditorHudCancelButton;

  @NonNull
  public final TextView imageEditorHudClearAll;

  @NonNull
  public final ImageView imageEditorHudColorIndicator;

  @NonNull
  public final RotationDialView imageEditorHudCropRotationDial;

  @NonNull
  public final ImageView imageEditorHudDoneButton;

  @NonNull
  public final ImageView imageEditorHudDrawBrush;

  @NonNull
  public final ImageView imageEditorHudDrawButton;

  @NonNull
  public final AppCompatSeekBar imageEditorHudDrawColorBar;

  @NonNull
  public final AppCompatSeekBar imageEditorHudDrawWidthBar;

  @NonNull
  public final ImageView imageEditorHudFlipButton;

  @NonNull
  public final ImageView imageEditorHudRotateButton;

  @NonNull
  public final ImageView imageEditorHudStickerButton;

  @NonNull
  public final ImageView imageEditorHudTextButton;

  @NonNull
  public final ImageView imageEditorHudTextStyleButton;

  @NonNull
  public final Space imageEditorHudTopOfButtonBarSpacing;

  @NonNull
  public final AppCompatImageView imageEditorHudUndo;

  @NonNull
  public final Barrier toggleButtonBarrier;

  private V2ChatMediaImageEditorHudBinding(@NonNull View rootView,
      @NonNull Guideline imageEditorBottomGuide, @NonNull ImageView imageEditorHudAspectLockButton,
      @NonNull ImageView imageEditorHudBlurButton, @NonNull TextView imageEditorHudBlurHelpText,
      @NonNull TextView imageEditorHudBlurToast, @NonNull SwitchMaterial imageEditorHudBlurToggle,
      @NonNull LinearLayout imageEditorHudBlurToggleContainer,
      @NonNull BrushWidthPreviewView imageEditorHudBrushPreview,
      @NonNull Barrier imageEditorHudButtonBarrier, @NonNull ImageView imageEditorHudCancelButton,
      @NonNull TextView imageEditorHudClearAll, @NonNull ImageView imageEditorHudColorIndicator,
      @NonNull RotationDialView imageEditorHudCropRotationDial,
      @NonNull ImageView imageEditorHudDoneButton, @NonNull ImageView imageEditorHudDrawBrush,
      @NonNull ImageView imageEditorHudDrawButton,
      @NonNull AppCompatSeekBar imageEditorHudDrawColorBar,
      @NonNull AppCompatSeekBar imageEditorHudDrawWidthBar,
      @NonNull ImageView imageEditorHudFlipButton, @NonNull ImageView imageEditorHudRotateButton,
      @NonNull ImageView imageEditorHudStickerButton, @NonNull ImageView imageEditorHudTextButton,
      @NonNull ImageView imageEditorHudTextStyleButton,
      @NonNull Space imageEditorHudTopOfButtonBarSpacing,
      @NonNull AppCompatImageView imageEditorHudUndo, @NonNull Barrier toggleButtonBarrier) {
    this.rootView = rootView;
    this.imageEditorBottomGuide = imageEditorBottomGuide;
    this.imageEditorHudAspectLockButton = imageEditorHudAspectLockButton;
    this.imageEditorHudBlurButton = imageEditorHudBlurButton;
    this.imageEditorHudBlurHelpText = imageEditorHudBlurHelpText;
    this.imageEditorHudBlurToast = imageEditorHudBlurToast;
    this.imageEditorHudBlurToggle = imageEditorHudBlurToggle;
    this.imageEditorHudBlurToggleContainer = imageEditorHudBlurToggleContainer;
    this.imageEditorHudBrushPreview = imageEditorHudBrushPreview;
    this.imageEditorHudButtonBarrier = imageEditorHudButtonBarrier;
    this.imageEditorHudCancelButton = imageEditorHudCancelButton;
    this.imageEditorHudClearAll = imageEditorHudClearAll;
    this.imageEditorHudColorIndicator = imageEditorHudColorIndicator;
    this.imageEditorHudCropRotationDial = imageEditorHudCropRotationDial;
    this.imageEditorHudDoneButton = imageEditorHudDoneButton;
    this.imageEditorHudDrawBrush = imageEditorHudDrawBrush;
    this.imageEditorHudDrawButton = imageEditorHudDrawButton;
    this.imageEditorHudDrawColorBar = imageEditorHudDrawColorBar;
    this.imageEditorHudDrawWidthBar = imageEditorHudDrawWidthBar;
    this.imageEditorHudFlipButton = imageEditorHudFlipButton;
    this.imageEditorHudRotateButton = imageEditorHudRotateButton;
    this.imageEditorHudStickerButton = imageEditorHudStickerButton;
    this.imageEditorHudTextButton = imageEditorHudTextButton;
    this.imageEditorHudTextStyleButton = imageEditorHudTextStyleButton;
    this.imageEditorHudTopOfButtonBarSpacing = imageEditorHudTopOfButtonBarSpacing;
    this.imageEditorHudUndo = imageEditorHudUndo;
    this.toggleButtonBarrier = toggleButtonBarrier;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static V2ChatMediaImageEditorHudBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.v2_chat_media_image_editor_hud, parent);
    return bind(parent);
  }

  @NonNull
  public static V2ChatMediaImageEditorHudBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_editor_bottom_guide;
      Guideline imageEditorBottomGuide = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorBottomGuide == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_aspect_lock_button;
      ImageView imageEditorHudAspectLockButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudAspectLockButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_blur_button;
      ImageView imageEditorHudBlurButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudBlurButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_blur_help_text;
      TextView imageEditorHudBlurHelpText = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudBlurHelpText == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_blur_toast;
      TextView imageEditorHudBlurToast = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudBlurToast == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_blur_toggle;
      SwitchMaterial imageEditorHudBlurToggle = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudBlurToggle == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_blur_toggle_container;
      LinearLayout imageEditorHudBlurToggleContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudBlurToggleContainer == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_brush_preview;
      BrushWidthPreviewView imageEditorHudBrushPreview = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudBrushPreview == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_button_barrier;
      Barrier imageEditorHudButtonBarrier = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudButtonBarrier == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_cancel_button;
      ImageView imageEditorHudCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudCancelButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_clear_all;
      TextView imageEditorHudClearAll = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudClearAll == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_color_indicator;
      ImageView imageEditorHudColorIndicator = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudColorIndicator == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_crop_rotation_dial;
      RotationDialView imageEditorHudCropRotationDial = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudCropRotationDial == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_done_button;
      ImageView imageEditorHudDoneButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudDoneButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_draw_brush;
      ImageView imageEditorHudDrawBrush = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudDrawBrush == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_draw_button;
      ImageView imageEditorHudDrawButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudDrawButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_draw_color_bar;
      AppCompatSeekBar imageEditorHudDrawColorBar = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudDrawColorBar == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_draw_width_bar;
      AppCompatSeekBar imageEditorHudDrawWidthBar = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudDrawWidthBar == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_flip_button;
      ImageView imageEditorHudFlipButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudFlipButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_rotate_button;
      ImageView imageEditorHudRotateButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudRotateButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_sticker_button;
      ImageView imageEditorHudStickerButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudStickerButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_text_button;
      ImageView imageEditorHudTextButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudTextButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_text_style_button;
      ImageView imageEditorHudTextStyleButton = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudTextStyleButton == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_top_of_button_bar_spacing;
      Space imageEditorHudTopOfButtonBarSpacing = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudTopOfButtonBarSpacing == null) {
        break missingId;
      }

      id = R.id.image_editor_hud_undo;
      AppCompatImageView imageEditorHudUndo = ViewBindings.findChildViewById(rootView, id);
      if (imageEditorHudUndo == null) {
        break missingId;
      }

      id = R.id.toggle_button_barrier;
      Barrier toggleButtonBarrier = ViewBindings.findChildViewById(rootView, id);
      if (toggleButtonBarrier == null) {
        break missingId;
      }

      return new V2ChatMediaImageEditorHudBinding(rootView, imageEditorBottomGuide,
          imageEditorHudAspectLockButton, imageEditorHudBlurButton, imageEditorHudBlurHelpText,
          imageEditorHudBlurToast, imageEditorHudBlurToggle, imageEditorHudBlurToggleContainer,
          imageEditorHudBrushPreview, imageEditorHudButtonBarrier, imageEditorHudCancelButton,
          imageEditorHudClearAll, imageEditorHudColorIndicator, imageEditorHudCropRotationDial,
          imageEditorHudDoneButton, imageEditorHudDrawBrush, imageEditorHudDrawButton,
          imageEditorHudDrawColorBar, imageEditorHudDrawWidthBar, imageEditorHudFlipButton,
          imageEditorHudRotateButton, imageEditorHudStickerButton, imageEditorHudTextButton,
          imageEditorHudTextStyleButton, imageEditorHudTopOfButtonBarSpacing, imageEditorHudUndo,
          toggleButtonBarrier);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

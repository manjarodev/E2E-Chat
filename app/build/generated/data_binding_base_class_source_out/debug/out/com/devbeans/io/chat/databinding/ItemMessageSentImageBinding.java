// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMessageSentImageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView editedTextCon;

  @NonNull
  public final ShapeableImageView image;

  @NonNull
  public final ImageView imageDisappearSent;

  @NonNull
  public final ImageView ivForwarded;

  @NonNull
  public final LinearLayout ivShare;

  @NonNull
  public final LinearLayout layoutForwardedSentImage;

  @NonNull
  public final TextView messageText0Con;

  @NonNull
  public final ConstraintLayout outgoingImageLayoutBubble;

  @NonNull
  public final RelativeLayout sendingImageMessageLayout;

  @NonNull
  public final CardView sentImage;

  @NonNull
  public final ImageView textSendTick;

  @NonNull
  public final ImageView textTextSendTickCon;

  @NonNull
  public final TextView textTextviewTimeCon;

  @NonNull
  public final LinearLayout textTimeAndTickLayoutCon;

  @NonNull
  public final TextView textviewTimeSent;

  @NonNull
  public final LinearLayout timeAndTickLayout;

  @NonNull
  public final TextView tvForwarded;

  private ItemMessageSentImageBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView editedTextCon, @NonNull ShapeableImageView image,
      @NonNull ImageView imageDisappearSent, @NonNull ImageView ivForwarded,
      @NonNull LinearLayout ivShare, @NonNull LinearLayout layoutForwardedSentImage,
      @NonNull TextView messageText0Con, @NonNull ConstraintLayout outgoingImageLayoutBubble,
      @NonNull RelativeLayout sendingImageMessageLayout, @NonNull CardView sentImage,
      @NonNull ImageView textSendTick, @NonNull ImageView textTextSendTickCon,
      @NonNull TextView textTextviewTimeCon, @NonNull LinearLayout textTimeAndTickLayoutCon,
      @NonNull TextView textviewTimeSent, @NonNull LinearLayout timeAndTickLayout,
      @NonNull TextView tvForwarded) {
    this.rootView = rootView;
    this.editedTextCon = editedTextCon;
    this.image = image;
    this.imageDisappearSent = imageDisappearSent;
    this.ivForwarded = ivForwarded;
    this.ivShare = ivShare;
    this.layoutForwardedSentImage = layoutForwardedSentImage;
    this.messageText0Con = messageText0Con;
    this.outgoingImageLayoutBubble = outgoingImageLayoutBubble;
    this.sendingImageMessageLayout = sendingImageMessageLayout;
    this.sentImage = sentImage;
    this.textSendTick = textSendTick;
    this.textTextSendTickCon = textTextSendTickCon;
    this.textTextviewTimeCon = textTextviewTimeCon;
    this.textTimeAndTickLayoutCon = textTimeAndTickLayoutCon;
    this.textviewTimeSent = textviewTimeSent;
    this.timeAndTickLayout = timeAndTickLayout;
    this.tvForwarded = tvForwarded;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMessageSentImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMessageSentImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_message_sent_image, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMessageSentImageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editedText_con;
      TextView editedTextCon = ViewBindings.findChildViewById(rootView, id);
      if (editedTextCon == null) {
        break missingId;
      }

      id = R.id.image;
      ShapeableImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.image_disappear_sent;
      ImageView imageDisappearSent = ViewBindings.findChildViewById(rootView, id);
      if (imageDisappearSent == null) {
        break missingId;
      }

      id = R.id.iv_forwarded;
      ImageView ivForwarded = ViewBindings.findChildViewById(rootView, id);
      if (ivForwarded == null) {
        break missingId;
      }

      id = R.id.iv_share;
      LinearLayout ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.layout_forwarded_sent_image;
      LinearLayout layoutForwardedSentImage = ViewBindings.findChildViewById(rootView, id);
      if (layoutForwardedSentImage == null) {
        break missingId;
      }

      id = R.id.messageText0_con;
      TextView messageText0Con = ViewBindings.findChildViewById(rootView, id);
      if (messageText0Con == null) {
        break missingId;
      }

      id = R.id.outgoing_image_layout_bubble;
      ConstraintLayout outgoingImageLayoutBubble = ViewBindings.findChildViewById(rootView, id);
      if (outgoingImageLayoutBubble == null) {
        break missingId;
      }

      id = R.id.sendingImageMessageLayout;
      RelativeLayout sendingImageMessageLayout = ViewBindings.findChildViewById(rootView, id);
      if (sendingImageMessageLayout == null) {
        break missingId;
      }

      id = R.id.sentImage;
      CardView sentImage = ViewBindings.findChildViewById(rootView, id);
      if (sentImage == null) {
        break missingId;
      }

      id = R.id.text_sendTick;
      ImageView textSendTick = ViewBindings.findChildViewById(rootView, id);
      if (textSendTick == null) {
        break missingId;
      }

      id = R.id.text_text_sendTick_con;
      ImageView textTextSendTickCon = ViewBindings.findChildViewById(rootView, id);
      if (textTextSendTickCon == null) {
        break missingId;
      }

      id = R.id.text_textview_time_con;
      TextView textTextviewTimeCon = ViewBindings.findChildViewById(rootView, id);
      if (textTextviewTimeCon == null) {
        break missingId;
      }

      id = R.id.text_time_and_tick_layout_con;
      LinearLayout textTimeAndTickLayoutCon = ViewBindings.findChildViewById(rootView, id);
      if (textTimeAndTickLayoutCon == null) {
        break missingId;
      }

      id = R.id.textview_time_sent;
      TextView textviewTimeSent = ViewBindings.findChildViewById(rootView, id);
      if (textviewTimeSent == null) {
        break missingId;
      }

      id = R.id.time_and_tick_layout;
      LinearLayout timeAndTickLayout = ViewBindings.findChildViewById(rootView, id);
      if (timeAndTickLayout == null) {
        break missingId;
      }

      id = R.id.tv_forwarded;
      TextView tvForwarded = ViewBindings.findChildViewById(rootView, id);
      if (tvForwarded == null) {
        break missingId;
      }

      return new ItemMessageSentImageBinding((RelativeLayout) rootView, editedTextCon, image,
          imageDisappearSent, ivForwarded, ivShare, layoutForwardedSentImage, messageText0Con,
          outgoingImageLayoutBubble, sendingImageMessageLayout, sentImage, textSendTick,
          textTextSendTickCon, textTextviewTimeCon, textTimeAndTickLayoutCon, textviewTimeSent,
          timeAndTickLayout, tvForwarded);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

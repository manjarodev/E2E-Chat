// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutPinViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText pinDigit1;

  @NonNull
  public final EditText pinDigit2;

  @NonNull
  public final EditText pinDigit3;

  @NonNull
  public final EditText pinDigit4;

  private LayoutPinViewBinding(@NonNull LinearLayout rootView, @NonNull EditText pinDigit1,
      @NonNull EditText pinDigit2, @NonNull EditText pinDigit3, @NonNull EditText pinDigit4) {
    this.rootView = rootView;
    this.pinDigit1 = pinDigit1;
    this.pinDigit2 = pinDigit2;
    this.pinDigit3 = pinDigit3;
    this.pinDigit4 = pinDigit4;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutPinViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutPinViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_pin_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutPinViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pin_digit_1;
      EditText pinDigit1 = ViewBindings.findChildViewById(rootView, id);
      if (pinDigit1 == null) {
        break missingId;
      }

      id = R.id.pin_digit_2;
      EditText pinDigit2 = ViewBindings.findChildViewById(rootView, id);
      if (pinDigit2 == null) {
        break missingId;
      }

      id = R.id.pin_digit_3;
      EditText pinDigit3 = ViewBindings.findChildViewById(rootView, id);
      if (pinDigit3 == null) {
        break missingId;
      }

      id = R.id.pin_digit_4;
      EditText pinDigit4 = ViewBindings.findChildViewById(rootView, id);
      if (pinDigit4 == null) {
        break missingId;
      }

      return new LayoutPinViewBinding((LinearLayout) rootView, pinDigit1, pinDigit2, pinDigit3,
          pinDigit4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

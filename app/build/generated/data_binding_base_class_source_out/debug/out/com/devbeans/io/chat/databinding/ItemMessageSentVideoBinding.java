// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMessageSentVideoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivForwarded;

  @NonNull
  public final LinearLayout ivShare;

  @NonNull
  public final ImageView ivVideo;

  @NonNull
  public final LinearLayout layoutForwardedSentVideo;

  @NonNull
  public final ConstraintLayout outgoingImageLayoutBubble;

  @NonNull
  public final RelativeLayout sendingImageMessageLayout;

  @NonNull
  public final CardView sentImage;

  @NonNull
  public final ShapeableImageView sentTxt;

  @NonNull
  public final ImageView textSendTick;

  @NonNull
  public final TextView textviewTimeSent;

  @NonNull
  public final TextView textviewTimeVideo;

  @NonNull
  public final LinearLayout timeAndTickLayout;

  @NonNull
  public final TextView tvForwarded;

  @NonNull
  public final ImageView videoDisappearSent;

  @NonNull
  public final LinearLayout videoTime;

  private ItemMessageSentVideoBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView ivForwarded, @NonNull LinearLayout ivShare, @NonNull ImageView ivVideo,
      @NonNull LinearLayout layoutForwardedSentVideo,
      @NonNull ConstraintLayout outgoingImageLayoutBubble,
      @NonNull RelativeLayout sendingImageMessageLayout, @NonNull CardView sentImage,
      @NonNull ShapeableImageView sentTxt, @NonNull ImageView textSendTick,
      @NonNull TextView textviewTimeSent, @NonNull TextView textviewTimeVideo,
      @NonNull LinearLayout timeAndTickLayout, @NonNull TextView tvForwarded,
      @NonNull ImageView videoDisappearSent, @NonNull LinearLayout videoTime) {
    this.rootView = rootView;
    this.ivForwarded = ivForwarded;
    this.ivShare = ivShare;
    this.ivVideo = ivVideo;
    this.layoutForwardedSentVideo = layoutForwardedSentVideo;
    this.outgoingImageLayoutBubble = outgoingImageLayoutBubble;
    this.sendingImageMessageLayout = sendingImageMessageLayout;
    this.sentImage = sentImage;
    this.sentTxt = sentTxt;
    this.textSendTick = textSendTick;
    this.textviewTimeSent = textviewTimeSent;
    this.textviewTimeVideo = textviewTimeVideo;
    this.timeAndTickLayout = timeAndTickLayout;
    this.tvForwarded = tvForwarded;
    this.videoDisappearSent = videoDisappearSent;
    this.videoTime = videoTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMessageSentVideoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMessageSentVideoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_message_sent_video, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMessageSentVideoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_forwarded;
      ImageView ivForwarded = ViewBindings.findChildViewById(rootView, id);
      if (ivForwarded == null) {
        break missingId;
      }

      id = R.id.iv_share;
      LinearLayout ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.iv_video;
      ImageView ivVideo = ViewBindings.findChildViewById(rootView, id);
      if (ivVideo == null) {
        break missingId;
      }

      id = R.id.layout_forwarded_sent_video;
      LinearLayout layoutForwardedSentVideo = ViewBindings.findChildViewById(rootView, id);
      if (layoutForwardedSentVideo == null) {
        break missingId;
      }

      id = R.id.outgoing_image_layout_bubble;
      ConstraintLayout outgoingImageLayoutBubble = ViewBindings.findChildViewById(rootView, id);
      if (outgoingImageLayoutBubble == null) {
        break missingId;
      }

      id = R.id.sendingImageMessageLayout;
      RelativeLayout sendingImageMessageLayout = ViewBindings.findChildViewById(rootView, id);
      if (sendingImageMessageLayout == null) {
        break missingId;
      }

      id = R.id.sentImage;
      CardView sentImage = ViewBindings.findChildViewById(rootView, id);
      if (sentImage == null) {
        break missingId;
      }

      id = R.id.sentTxt;
      ShapeableImageView sentTxt = ViewBindings.findChildViewById(rootView, id);
      if (sentTxt == null) {
        break missingId;
      }

      id = R.id.text_sendTick;
      ImageView textSendTick = ViewBindings.findChildViewById(rootView, id);
      if (textSendTick == null) {
        break missingId;
      }

      id = R.id.textview_time_sent;
      TextView textviewTimeSent = ViewBindings.findChildViewById(rootView, id);
      if (textviewTimeSent == null) {
        break missingId;
      }

      id = R.id.textview_time_video;
      TextView textviewTimeVideo = ViewBindings.findChildViewById(rootView, id);
      if (textviewTimeVideo == null) {
        break missingId;
      }

      id = R.id.time_and_tick_layout;
      LinearLayout timeAndTickLayout = ViewBindings.findChildViewById(rootView, id);
      if (timeAndTickLayout == null) {
        break missingId;
      }

      id = R.id.tv_forwarded;
      TextView tvForwarded = ViewBindings.findChildViewById(rootView, id);
      if (tvForwarded == null) {
        break missingId;
      }

      id = R.id.video_disappear_sent;
      ImageView videoDisappearSent = ViewBindings.findChildViewById(rootView, id);
      if (videoDisappearSent == null) {
        break missingId;
      }

      id = R.id.video_time;
      LinearLayout videoTime = ViewBindings.findChildViewById(rootView, id);
      if (videoTime == null) {
        break missingId;
      }

      return new ItemMessageSentVideoBinding((RelativeLayout) rootView, ivForwarded, ivShare,
          ivVideo, layoutForwardedSentVideo, outgoingImageLayoutBubble, sendingImageMessageLayout,
          sentImage, sentTxt, textSendTick, textviewTimeSent, textviewTimeVideo, timeAndTickLayout,
          tvForwarded, videoDisappearSent, videoTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

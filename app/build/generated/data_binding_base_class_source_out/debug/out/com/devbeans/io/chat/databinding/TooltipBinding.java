// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TooltipBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView tooltipArrowBottom;

  @NonNull
  public final ImageView tooltipArrowEnd;

  @NonNull
  public final ImageView tooltipArrowStart;

  @NonNull
  public final ImageView tooltipArrowTop;

  @NonNull
  public final LinearLayout tooltipBubble;

  @NonNull
  public final ImageView tooltipIcon;

  @NonNull
  public final TextView tooltipText;

  private TooltipBinding(@NonNull LinearLayout rootView, @NonNull ImageView tooltipArrowBottom,
      @NonNull ImageView tooltipArrowEnd, @NonNull ImageView tooltipArrowStart,
      @NonNull ImageView tooltipArrowTop, @NonNull LinearLayout tooltipBubble,
      @NonNull ImageView tooltipIcon, @NonNull TextView tooltipText) {
    this.rootView = rootView;
    this.tooltipArrowBottom = tooltipArrowBottom;
    this.tooltipArrowEnd = tooltipArrowEnd;
    this.tooltipArrowStart = tooltipArrowStart;
    this.tooltipArrowTop = tooltipArrowTop;
    this.tooltipBubble = tooltipBubble;
    this.tooltipIcon = tooltipIcon;
    this.tooltipText = tooltipText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TooltipBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TooltipBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.tooltip, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TooltipBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tooltip_arrow_bottom;
      ImageView tooltipArrowBottom = ViewBindings.findChildViewById(rootView, id);
      if (tooltipArrowBottom == null) {
        break missingId;
      }

      id = R.id.tooltip_arrow_end;
      ImageView tooltipArrowEnd = ViewBindings.findChildViewById(rootView, id);
      if (tooltipArrowEnd == null) {
        break missingId;
      }

      id = R.id.tooltip_arrow_start;
      ImageView tooltipArrowStart = ViewBindings.findChildViewById(rootView, id);
      if (tooltipArrowStart == null) {
        break missingId;
      }

      id = R.id.tooltip_arrow_top;
      ImageView tooltipArrowTop = ViewBindings.findChildViewById(rootView, id);
      if (tooltipArrowTop == null) {
        break missingId;
      }

      id = R.id.tooltip_bubble;
      LinearLayout tooltipBubble = ViewBindings.findChildViewById(rootView, id);
      if (tooltipBubble == null) {
        break missingId;
      }

      id = R.id.tooltip_icon;
      ImageView tooltipIcon = ViewBindings.findChildViewById(rootView, id);
      if (tooltipIcon == null) {
        break missingId;
      }

      id = R.id.tooltip_text;
      TextView tooltipText = ViewBindings.findChildViewById(rootView, id);
      if (tooltipText == null) {
        break missingId;
      }

      return new TooltipBinding((LinearLayout) rootView, tooltipArrowBottom, tooltipArrowEnd,
          tooltipArrowStart, tooltipArrowTop, tooltipBubble, tooltipIcon, tooltipText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

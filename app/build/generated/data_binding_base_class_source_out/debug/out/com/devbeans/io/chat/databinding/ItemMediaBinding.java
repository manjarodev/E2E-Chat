// Generated by data binding compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.devbeans.io.chat.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemMediaBinding extends ViewDataBinding {
  @NonNull
  public final CardView cvImage;

  @NonNull
  public final ImageView ivImage;

  @NonNull
  public final ImageView ivPlay;

  @NonNull
  public final ImageView ivVideoMedia;

  @NonNull
  public final TextView textviewTimeVideoMedia;

  @NonNull
  public final TextView tvLabel;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final LinearLayout videoTimeMedia;

  @NonNull
  public final View viewOpacity75;

  protected ItemMediaBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cvImage, ImageView ivImage, ImageView ivPlay, ImageView ivVideoMedia,
      TextView textviewTimeVideoMedia, TextView tvLabel, TextView tvTime,
      LinearLayout videoTimeMedia, View viewOpacity75) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cvImage = cvImage;
    this.ivImage = ivImage;
    this.ivPlay = ivPlay;
    this.ivVideoMedia = ivVideoMedia;
    this.textviewTimeVideoMedia = textviewTimeVideoMedia;
    this.tvLabel = tvLabel;
    this.tvTime = tvTime;
    this.videoTimeMedia = videoTimeMedia;
    this.viewOpacity75 = viewOpacity75;
  }

  @NonNull
  public static ItemMediaBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_media, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemMediaBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemMediaBinding>inflateInternal(inflater, R.layout.item_media, root, attachToRoot, component);
  }

  @NonNull
  public static ItemMediaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_media, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemMediaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemMediaBinding>inflateInternal(inflater, R.layout.item_media, null, false, component);
  }

  public static ItemMediaBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemMediaBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemMediaBinding)bind(component, view, R.layout.item_media);
  }
}

// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVerifyPinBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout buttonVerify;

  @NonNull
  public final ImageView ivPin;

  @NonNull
  public final LinearLayout lvProceed;

  @NonNull
  public final ConstraintLayout pinLayout1;

  @NonNull
  public final LayoutPinViewBinding pinView;

  @NonNull
  public final LinearLayout pinViewLayout;

  @NonNull
  public final TextView tvAttempts;

  @NonNull
  public final TextView tvCreatePin;

  @NonNull
  public final TextView tvCreatePinNote;

  private FragmentVerifyPinBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout buttonVerify, @NonNull ImageView ivPin, @NonNull LinearLayout lvProceed,
      @NonNull ConstraintLayout pinLayout1, @NonNull LayoutPinViewBinding pinView,
      @NonNull LinearLayout pinViewLayout, @NonNull TextView tvAttempts,
      @NonNull TextView tvCreatePin, @NonNull TextView tvCreatePinNote) {
    this.rootView = rootView;
    this.buttonVerify = buttonVerify;
    this.ivPin = ivPin;
    this.lvProceed = lvProceed;
    this.pinLayout1 = pinLayout1;
    this.pinView = pinView;
    this.pinViewLayout = pinViewLayout;
    this.tvAttempts = tvAttempts;
    this.tvCreatePin = tvCreatePin;
    this.tvCreatePinNote = tvCreatePinNote;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVerifyPinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVerifyPinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_verify_pin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVerifyPinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonVerify;
      LinearLayout buttonVerify = ViewBindings.findChildViewById(rootView, id);
      if (buttonVerify == null) {
        break missingId;
      }

      id = R.id.iv_pin;
      ImageView ivPin = ViewBindings.findChildViewById(rootView, id);
      if (ivPin == null) {
        break missingId;
      }

      id = R.id.lvProceed;
      LinearLayout lvProceed = ViewBindings.findChildViewById(rootView, id);
      if (lvProceed == null) {
        break missingId;
      }

      id = R.id.pinLayout1;
      ConstraintLayout pinLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (pinLayout1 == null) {
        break missingId;
      }

      id = R.id.pinView;
      View pinView = ViewBindings.findChildViewById(rootView, id);
      if (pinView == null) {
        break missingId;
      }
      LayoutPinViewBinding binding_pinView = LayoutPinViewBinding.bind(pinView);

      id = R.id.pinViewLayout;
      LinearLayout pinViewLayout = ViewBindings.findChildViewById(rootView, id);
      if (pinViewLayout == null) {
        break missingId;
      }

      id = R.id.tvAttempts;
      TextView tvAttempts = ViewBindings.findChildViewById(rootView, id);
      if (tvAttempts == null) {
        break missingId;
      }

      id = R.id.tv_create_pin;
      TextView tvCreatePin = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatePin == null) {
        break missingId;
      }

      id = R.id.tv_create_pin_note;
      TextView tvCreatePinNote = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatePinNote == null) {
        break missingId;
      }

      return new FragmentVerifyPinBinding((FrameLayout) rootView, buttonVerify, ivPin, lvProceed,
          pinLayout1, binding_pinView, pinViewLayout, tvAttempts, tvCreatePin, tvCreatePinNote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

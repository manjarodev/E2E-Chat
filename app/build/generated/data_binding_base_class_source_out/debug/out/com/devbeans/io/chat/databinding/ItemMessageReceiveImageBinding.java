// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMessageReceiveImageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout ReceivingImageMessageLayout;

  @NonNull
  public final LinearLayout download;

  @NonNull
  public final ShapeableImageView image;

  @NonNull
  public final ImageView imageDisappearReceive;

  @NonNull
  public final ImageView ivForwarded;

  @NonNull
  public final LinearLayout ivShare;

  @NonNull
  public final LinearLayout layoutForwardedReceiveImage;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final RelativeLayout mainlayout;

  @NonNull
  public final ConstraintLayout receivingImageLayoutBubble;

  @NonNull
  public final CardView sentImage;

  @NonNull
  public final TextView textviewTimeSent;

  @NonNull
  public final LinearLayout timeAndTickLayout;

  @NonNull
  public final TextView tvForwarded;

  @NonNull
  public final TextView tvGroupMemberName;

  @NonNull
  public final TextView tvSize;

  private ItemMessageReceiveImageBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout ReceivingImageMessageLayout, @NonNull LinearLayout download,
      @NonNull ShapeableImageView image, @NonNull ImageView imageDisappearReceive,
      @NonNull ImageView ivForwarded, @NonNull LinearLayout ivShare,
      @NonNull LinearLayout layoutForwardedReceiveImage, @NonNull ProgressBar loading,
      @NonNull RelativeLayout mainlayout, @NonNull ConstraintLayout receivingImageLayoutBubble,
      @NonNull CardView sentImage, @NonNull TextView textviewTimeSent,
      @NonNull LinearLayout timeAndTickLayout, @NonNull TextView tvForwarded,
      @NonNull TextView tvGroupMemberName, @NonNull TextView tvSize) {
    this.rootView = rootView;
    this.ReceivingImageMessageLayout = ReceivingImageMessageLayout;
    this.download = download;
    this.image = image;
    this.imageDisappearReceive = imageDisappearReceive;
    this.ivForwarded = ivForwarded;
    this.ivShare = ivShare;
    this.layoutForwardedReceiveImage = layoutForwardedReceiveImage;
    this.loading = loading;
    this.mainlayout = mainlayout;
    this.receivingImageLayoutBubble = receivingImageLayoutBubble;
    this.sentImage = sentImage;
    this.textviewTimeSent = textviewTimeSent;
    this.timeAndTickLayout = timeAndTickLayout;
    this.tvForwarded = tvForwarded;
    this.tvGroupMemberName = tvGroupMemberName;
    this.tvSize = tvSize;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMessageReceiveImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMessageReceiveImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_message_receive_image, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMessageReceiveImageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ReceivingImageMessageLayout;
      RelativeLayout ReceivingImageMessageLayout = ViewBindings.findChildViewById(rootView, id);
      if (ReceivingImageMessageLayout == null) {
        break missingId;
      }

      id = R.id.download;
      LinearLayout download = ViewBindings.findChildViewById(rootView, id);
      if (download == null) {
        break missingId;
      }

      id = R.id.image;
      ShapeableImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.image_disappear_receive;
      ImageView imageDisappearReceive = ViewBindings.findChildViewById(rootView, id);
      if (imageDisappearReceive == null) {
        break missingId;
      }

      id = R.id.iv_forwarded;
      ImageView ivForwarded = ViewBindings.findChildViewById(rootView, id);
      if (ivForwarded == null) {
        break missingId;
      }

      id = R.id.iv_share;
      LinearLayout ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.layout_forwarded_receive_image;
      LinearLayout layoutForwardedReceiveImage = ViewBindings.findChildViewById(rootView, id);
      if (layoutForwardedReceiveImage == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.mainlayout;
      RelativeLayout mainlayout = ViewBindings.findChildViewById(rootView, id);
      if (mainlayout == null) {
        break missingId;
      }

      id = R.id.receiving_image_layout_bubble;
      ConstraintLayout receivingImageLayoutBubble = ViewBindings.findChildViewById(rootView, id);
      if (receivingImageLayoutBubble == null) {
        break missingId;
      }

      id = R.id.sentImage;
      CardView sentImage = ViewBindings.findChildViewById(rootView, id);
      if (sentImage == null) {
        break missingId;
      }

      id = R.id.textview_time_sent;
      TextView textviewTimeSent = ViewBindings.findChildViewById(rootView, id);
      if (textviewTimeSent == null) {
        break missingId;
      }

      id = R.id.time_and_tick_layout;
      LinearLayout timeAndTickLayout = ViewBindings.findChildViewById(rootView, id);
      if (timeAndTickLayout == null) {
        break missingId;
      }

      id = R.id.tv_forwarded;
      TextView tvForwarded = ViewBindings.findChildViewById(rootView, id);
      if (tvForwarded == null) {
        break missingId;
      }

      id = R.id.tv_group_member_name;
      TextView tvGroupMemberName = ViewBindings.findChildViewById(rootView, id);
      if (tvGroupMemberName == null) {
        break missingId;
      }

      id = R.id.tv_size;
      TextView tvSize = ViewBindings.findChildViewById(rootView, id);
      if (tvSize == null) {
        break missingId;
      }

      return new ItemMessageReceiveImageBinding((RelativeLayout) rootView,
          ReceivingImageMessageLayout, download, image, imageDisappearReceive, ivForwarded, ivShare,
          layoutForwardedReceiveImage, loading, mainlayout, receivingImageLayoutBubble, sentImage,
          textviewTimeSent, timeAndTickLayout, tvForwarded, tvGroupMemberName, tvSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

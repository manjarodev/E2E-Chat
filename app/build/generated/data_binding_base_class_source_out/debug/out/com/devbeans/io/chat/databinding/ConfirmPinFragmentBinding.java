// Generated by data binding compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.devbeans.io.chat.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ConfirmPinFragmentBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout buttonVerify;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView ivPin;

  @NonNull
  public final LinearLayout lvProceed;

  @NonNull
  public final ConstraintLayout pinLayout1;

  @NonNull
  public final LayoutPinViewBinding pinView;

  @NonNull
  public final LinearLayout pinViewLayout;

  @NonNull
  public final TextView tvAttempts;

  @NonNull
  public final TextView tvCreatePin;

  @NonNull
  public final TextView tvCreatePinNote;

  protected ConfirmPinFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout buttonVerify, Guideline guideline, ImageView ivPin, LinearLayout lvProceed,
      ConstraintLayout pinLayout1, LayoutPinViewBinding pinView, LinearLayout pinViewLayout,
      TextView tvAttempts, TextView tvCreatePin, TextView tvCreatePinNote) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonVerify = buttonVerify;
    this.guideline = guideline;
    this.ivPin = ivPin;
    this.lvProceed = lvProceed;
    this.pinLayout1 = pinLayout1;
    this.pinView = pinView;
    this.pinViewLayout = pinViewLayout;
    this.tvAttempts = tvAttempts;
    this.tvCreatePin = tvCreatePin;
    this.tvCreatePinNote = tvCreatePinNote;
  }

  @NonNull
  public static ConfirmPinFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.confirm_pin_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ConfirmPinFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ConfirmPinFragmentBinding>inflateInternal(inflater, R.layout.confirm_pin_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static ConfirmPinFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.confirm_pin_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ConfirmPinFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ConfirmPinFragmentBinding>inflateInternal(inflater, R.layout.confirm_pin_fragment, null, false, component);
  }

  public static ConfirmPinFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ConfirmPinFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (ConfirmPinFragmentBinding)bind(component, view, R.layout.confirm_pin_fragment);
  }
}

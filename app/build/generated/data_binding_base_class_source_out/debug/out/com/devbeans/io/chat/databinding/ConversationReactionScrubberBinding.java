// Generated by view binder compiler. Do not edit!
package com.devbeans.io.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devbeans.io.chat.R;
import com.devbeans.io.chat.utils.views.ConversationReactionOverlay;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConversationReactionScrubberBinding implements ViewBinding {
  @NonNull
  private final ConversationReactionOverlay rootView;

  @NonNull
  public final View conversationItem;

  @NonNull
  public final View conversationReactionCurrentSelectionIndicator;

  @NonNull
  public final ConversationReactionOverlay conversationReactionScrubber;

  @NonNull
  public final View conversationReactionScrubberBackground;

  @NonNull
  public final ConstraintLayout conversationReactionScrubberForeground;

  @NonNull
  public final Space dropdownAnchor;

  @NonNull
  public final FrameLayout inputShade;

  @NonNull
  public final FrameLayout toolbarShade;

  private ConversationReactionScrubberBinding(@NonNull ConversationReactionOverlay rootView,
      @NonNull View conversationItem, @NonNull View conversationReactionCurrentSelectionIndicator,
      @NonNull ConversationReactionOverlay conversationReactionScrubber,
      @NonNull View conversationReactionScrubberBackground,
      @NonNull ConstraintLayout conversationReactionScrubberForeground,
      @NonNull Space dropdownAnchor, @NonNull FrameLayout inputShade,
      @NonNull FrameLayout toolbarShade) {
    this.rootView = rootView;
    this.conversationItem = conversationItem;
    this.conversationReactionCurrentSelectionIndicator = conversationReactionCurrentSelectionIndicator;
    this.conversationReactionScrubber = conversationReactionScrubber;
    this.conversationReactionScrubberBackground = conversationReactionScrubberBackground;
    this.conversationReactionScrubberForeground = conversationReactionScrubberForeground;
    this.dropdownAnchor = dropdownAnchor;
    this.inputShade = inputShade;
    this.toolbarShade = toolbarShade;
  }

  @Override
  @NonNull
  public ConversationReactionOverlay getRoot() {
    return rootView;
  }

  @NonNull
  public static ConversationReactionScrubberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConversationReactionScrubberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.conversation_reaction_scrubber, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConversationReactionScrubberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.conversation_item;
      View conversationItem = ViewBindings.findChildViewById(rootView, id);
      if (conversationItem == null) {
        break missingId;
      }

      id = R.id.conversation_reaction_current_selection_indicator;
      View conversationReactionCurrentSelectionIndicator = ViewBindings.findChildViewById(rootView, id);
      if (conversationReactionCurrentSelectionIndicator == null) {
        break missingId;
      }

      ConversationReactionOverlay conversationReactionScrubber = (ConversationReactionOverlay) rootView;

      id = R.id.conversation_reaction_scrubber_background;
      View conversationReactionScrubberBackground = ViewBindings.findChildViewById(rootView, id);
      if (conversationReactionScrubberBackground == null) {
        break missingId;
      }

      id = R.id.conversation_reaction_scrubber_foreground;
      ConstraintLayout conversationReactionScrubberForeground = ViewBindings.findChildViewById(rootView, id);
      if (conversationReactionScrubberForeground == null) {
        break missingId;
      }

      id = R.id.dropdown_anchor;
      Space dropdownAnchor = ViewBindings.findChildViewById(rootView, id);
      if (dropdownAnchor == null) {
        break missingId;
      }

      id = R.id.input_shade;
      FrameLayout inputShade = ViewBindings.findChildViewById(rootView, id);
      if (inputShade == null) {
        break missingId;
      }

      id = R.id.toolbar_shade;
      FrameLayout toolbarShade = ViewBindings.findChildViewById(rootView, id);
      if (toolbarShade == null) {
        break missingId;
      }

      return new ConversationReactionScrubberBinding((ConversationReactionOverlay) rootView,
          conversationItem, conversationReactionCurrentSelectionIndicator,
          conversationReactionScrubber, conversationReactionScrubberBackground,
          conversationReactionScrubberForeground, dropdownAnchor, inputShade, toolbarShade);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
